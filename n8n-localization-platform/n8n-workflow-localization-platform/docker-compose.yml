version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: n8n-localization-postgres
    environment:
      POSTGRES_USER: n8n_user
      POSTGRES_PASSWORD: n8n_password
      POSTGRES_DB: n8n_localization
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - n8n-network

  redis:
    image: redis:7-alpine
    container_name: n8n-localization-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - n8n-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: n8n-localization-backend
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://n8n_user:n8n_password@postgres:5432/n8n_localization
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-jwt-secret-here
      GOOGLE_TRANSLATE_API_KEY: ${GOOGLE_TRANSLATE_API_KEY}
      DEEPL_API_KEY: ${DEEPL_API_KEY}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - n8n-network
    command: npm run dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: n8n-localization-frontend
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:3001/api
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - n8n-network
    command: npm start

networks:
  n8n-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: