name: 📝 Simple Auto PR Creation

# シンプルで確実な自動PR作成
# pushベースの基本実装（最も安定・エラーが少ない）

on:
  push:
    branches:
      # 対象ブランチパターン
      - 'feature/**'
      - 'fix/**' 
      - 'chore/**'
      - 'docs/**'
    # mainブランチは除外（無限ループ防止）
    paths-ignore:
      - 'README.md'
      - '.github/**'

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  auto-create-pr:
    # 基本条件チェック: mainブランチでの実行を完全に防ぐ
    if: |
      github.ref != 'refs/heads/main' && 
      github.ref != 'refs/heads/master' && 
      !startsWith(github.ref, 'refs/heads/template')
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # === STEP 1: 基本情報の取得 ===
      - name: 🔍 Get branch info
        id: branch_info
        run: |
          CURRENT_BRANCH="${GITHUB_REF#refs/heads/}"
          echo "branch_name=$CURRENT_BRANCH" >> $GITHUB_OUTPUT
          echo "📍 Current branch: $CURRENT_BRANCH"

      # === STEP 2: 重複PR確認（最も重要） ===
      - name: 🔍 Check existing PR
        id: check_pr
        run: |
          BRANCH_NAME="${{ steps.branch_info.outputs.branch_name }}"
          
          # 既存PR確認
          EXISTING_PR=$(gh pr list --head "$BRANCH_NAME" --state open --json number --jq '.[0].number // empty')
          
          if [ -n "$EXISTING_PR" ]; then
            echo "existing_pr=$EXISTING_PR" >> $GITHUB_OUTPUT
            echo "should_create=false" >> $GITHUB_OUTPUT
            echo "✅ 既存PR #$EXISTING_PR が存在 - スキップします"
          else
            echo "should_create=true" >> $GITHUB_OUTPUT
            echo "🆕 新規PR作成が必要です"
          fi

      # === STEP 3: 変更内容分析 ===
      - name: 📊 Analyze changes
        id: changes
        if: steps.check_pr.outputs.should_create == 'true'
        run: |
          # main との差分を確認
          CHANGED_FILES=$(git diff --name-only origin/main..HEAD || echo "")
          FILE_COUNT=$(echo "$CHANGED_FILES" | grep -c . || echo "0")
          
          echo "changed_files<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGED_FILES" >> $GITHUB_OUTPUT  
          echo "EOF" >> $GITHUB_OUTPUT
          echo "file_count=$FILE_COUNT" >> $GITHUB_OUTPUT
          
          echo "📁 Changed files: $FILE_COUNT"

      # === STEP 4: PRタイトル・説明生成 ===
      - name: 📝 Generate PR content
        id: pr_content
        if: steps.check_pr.outputs.should_create == 'true'
        run: |
          BRANCH_NAME="${{ steps.branch_info.outputs.branch_name }}"
          FILE_COUNT="${{ steps.changes.outputs.file_count }}"
          
          # ブランチタイプに基づくプレフィックス
          if [[ $BRANCH_NAME == feature/* ]]; then
            PR_PREFIX="feat"
          elif [[ $BRANCH_NAME == fix/* ]]; then
            PR_PREFIX="fix"
          elif [[ $BRANCH_NAME == chore/* ]]; then
            PR_PREFIX="chore"
          elif [[ $BRANCH_NAME == docs/* ]]; then
            PR_PREFIX="docs"
          else
            PR_PREFIX="update"
          fi
          
          # ブランチ名からタイトル生成（シンプル）
          CLEAN_NAME=$(echo "$BRANCH_NAME" | sed 's|^[^/]*/||' | sed 's|-| |g' | sed 's|_| |g')
          PR_TITLE="$PR_PREFIX: $CLEAN_NAME"
          
          echo "pr_title=$PR_TITLE" >> $GITHUB_OUTPUT
          echo "pr_prefix=$PR_PREFIX" >> $GITHUB_OUTPUT
          echo "📝 PR Title: $PR_TITLE"

      # === STEP 5: PR作成（最もシンプルな方法） ===
      - name: 🚀 Create Pull Request
        if: steps.check_pr.outputs.should_create == 'true'
        run: |
          BRANCH_NAME="${{ steps.branch_info.outputs.branch_name }}"
          PR_TITLE="${{ steps.pr_content.outputs.pr_title }}"
          FILE_COUNT="${{ steps.changes.outputs.file_count }}"
          
          # シンプルなPR説明文
          cat > pr_body.md << EOF
## 📋 Summary
Auto-generated PR from branch: \`$BRANCH_NAME\`

## 🔧 Changes
- **Files modified**: $FILE_COUNT files
- **Branch type**: ${{ steps.pr_content.outputs.pr_prefix }}

## 📁 Changed Files
$(echo "${{ steps.changes.outputs.changed_files }}" | head -10 | sed 's/^/- `/' | sed 's/$/`/')

## ✅ Checklist
- [ ] Code review
- [ ] Tests passing  
- [ ] Ready to merge

---
🤖 **Auto-created on**: $(date)
EOF
          
          # PR作成（シンプル・確実）
          gh pr create \
            --title "$PR_TITLE" \
            --body-file pr_body.md \
            --base main \
            --head "$BRANCH_NAME" \
            --label "auto-generated"
          
          echo "✅ PR created successfully"

      # === STEP 6: 結果出力 ===
      - name: 🎉 Success message
        if: steps.check_pr.outputs.should_create == 'true'
        run: |
          echo "🎉 Auto PR creation completed!"
          echo "Branch: ${{ steps.branch_info.outputs.branch_name }}"
          echo "Files: ${{ steps.changes.outputs.file_count }}"
          echo "Ready for review!"

      - name: ✅ Skip message  
        if: steps.check_pr.outputs.should_create == 'false'
        run: |
          echo "✅ PR already exists - no action needed"
          echo "Existing PR: #${{ steps.check_pr.outputs.existing_pr }}"