name: Auto PR from Issue Development

on:
  push:
    branches:
      - 'issue-*/**'
      - 'feat/*'
      - 'fix/*' 
      - 'feature/*'
      - 'claude/*'

jobs:
  create-pull-request:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract issue number from branch
        id: extract_issue
        run: |
          BRANCH_NAME="${{ github.ref_name }}"
          echo "Branch name: $BRANCH_NAME"
          
          ISSUE_NUMBER=""
          
          # claude/issue-9-20250824-0907 パターン
          if [[ "$BRANCH_NAME" =~ claude/issue-([0-9]+) ]]; then
            ISSUE_NUMBER="${BASH_REMATCH[1]}"
          # issue-123/feature パターン
          elif [[ "$BRANCH_NAME" =~ issue-?([0-9]+) ]]; then
            ISSUE_NUMBER=$(echo "$BRANCH_NAME" | grep -oE '[0-9]+' | head -1)
          # その他から数字抽出
          else
            ISSUE_NUMBER=$(echo "$BRANCH_NAME" | grep -oE '[0-9]+' | head -1 || echo "")
          fi
          
          echo "issue_number=$ISSUE_NUMBER" >> $GITHUB_OUTPUT
          echo "Extracted issue number: $ISSUE_NUMBER"

      - name: Get issue details
        id: issue_details
        if: steps.extract_issue.outputs.issue_number != ''
        run: |
          ISSUE_NUMBER="${{ steps.extract_issue.outputs.issue_number }}"
          
          ISSUE_TITLE=$(gh issue view $ISSUE_NUMBER --json title --jq '.title' 2>/dev/null || echo "Issue #$ISSUE_NUMBER")
          ISSUE_URL="https://github.com/${{ github.repository }}/issues/$ISSUE_NUMBER"
          
          echo "issue_title=$ISSUE_TITLE" >> $GITHUB_OUTPUT
          echo "issue_url=$ISSUE_URL" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if PR already exists
        id: check_pr
        run: |
          BRANCH_NAME="${{ github.ref_name }}"
          PR_EXISTS=$(gh pr list --head "$BRANCH_NAME" --json number --jq length 2>/dev/null || echo "0")
          echo "pr_exists=$PR_EXISTS" >> $GITHUB_OUTPUT
          echo "PR exists: $PR_EXISTS"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Pull Request
        if: steps.check_pr.outputs.pr_exists == '0'
        run: |
          BRANCH_NAME="${{ github.ref_name }}"
          ISSUE_NUMBER="${{ steps.extract_issue.outputs.issue_number }}"
          ISSUE_TITLE="${{ steps.issue_details.outputs.issue_title }}"
          
          if [ -n "$ISSUE_NUMBER" ] && [ -n "$ISSUE_TITLE" ]; then
            PR_TITLE="Fix #$ISSUE_NUMBER: $ISSUE_TITLE"
          else
            PR_TITLE="Auto PR: $BRANCH_NAME"
          fi
          
          PR_BODY="## 概要
          このPRは Claude Code を使用して Issue #$ISSUE_NUMBER の解決のために自動作成されました。
          
          ## 関連Issue
          Closes #$ISSUE_NUMBER
          
          ## 変更内容
          - Claude Code による自動実装
          - Issue の要件に基づく修正/機能追加
          
          ## 確認事項
          - [ ] コードレビュー完了
          - [ ] テスト実行確認
          - [ ] Issue の要件を満たしているか確認
          
          ---
          🤖 このPRは自動生成されました  
          Branch: \`$BRANCH_NAME\`  
          Triggered by: @${{ github.actor }}"
          
          gh pr create \
            --base main \
            --head "$BRANCH_NAME" \
            --title "$PR_TITLE" \
            --body "$PR_BODY" \
            --label "automated-pr,claude-code" \
            --assignee "${{ github.actor }}"
          
          echo "✅ Pull Request created successfully!"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
